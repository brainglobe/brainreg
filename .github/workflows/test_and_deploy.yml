name: tests

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
  schedule:
  # Runs at 6:10am UTC on Monday
    - cron: '10 6 * * 1'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/lint@v2

  manifest:
    name: Check manifest
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/check_manifest@v2

  test:
    needs: [linting, manifest]
    name: ${{ matrix.os }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Run all supported Python versions on linux
        os: [ ubuntu-latest ]
        python-version: [ "3.11", "3.12", "3.13" ]
        include:
          # silicon mac tested with mamba due to niftyreg complications
          - os: windows-latest
            python-version: "3.13"

    steps:
      - name: Cache brainglobe directory
        uses: actions/cache@v3
        with:
          path: | # ensure we don't cache any interrupted atlas download and extraction, if e.g. we cancel the workflow manually
            ~/.brainglobe
            !~/.brainglobe/atlas.tar.gz
          key: atlases

      - name: Setup QT libraries
        uses: tlambert03/setup-qt-libs@v1

      # Helps set up VTK with a headless display
      - uses: pyvista/setup-headless-display-action@v3

      - name: Run tests
        uses: neuroinformatics-unit/actions/test@v2
        with:
          python-version: ${{ matrix.python-version }}
          secret-codecov-token: ${{ secrets.CODECOV_TOKEN }}
          use-xvfb: true

      - name: Notify slack on scheduled failure
        if: failure() && github.event_name == 'schedule'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }} # required
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_NOTIFYBOT_WEBHOOK_URL }} # required

  test-with-conda:
    # mainly checks conda installation of niftyreg, especially key on Silicon macs
    needs: [linting, manifest]
    name: Test conda-install, on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup mamba environment
        uses: mamba-org/setup-micromamba@v1
        with:
          init-shell: bash
          environment-name: niftyreg-env
          create-args: >-
            python=3.13
            setuptools
            setuptools_scm
            wheel

      - name: Install package into environment
        shell: bash -el {0}
        run: |
          pip install .[dev]

      - name: Run backend tests (no conda binaries)
        shell: bash -el {0}
        run: |
          pytest -v tests/tests/test_backend

      - name: Install niftyreg with conda
        shell: bash -el {0}
        run: |
          micromamba install niftyreg

      - name: Run backend tests(conda binaries present)
        shell: bash -el {0}
        run: |
          pytest -v tests/tests/test_backend

  build_sdist_wheel:
    name: Build source distribution and wheel
    needs: [test, test-with-conda]
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
      - uses: neuroinformatics-unit/actions/build_sdist_wheels@v2

  upload_all:
    name: Publish build distributions
    needs: [build_sdist_wheel]
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TWINE_API_KEY }}
